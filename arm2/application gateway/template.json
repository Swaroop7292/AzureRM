{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location of the resources"
            },
            "defaultValue": "[resourceGroup().location]"
        },
        "vNet1Name": {
            "type": "string",
            "metadata": {
                "description": "Name for vNet 1"
            }
        },
        "vNet2Name": {
            "type": "string",
            "metadata": {
                "description": "Name for vNet 2"
            }
        },
        "VM1adminUsername": {
           "type": "string",
           "metadata": {
                "description": "VM1 Admin user name"
            }
        }
    },
    "variables": {
        "vNet1": {
            "addressSpacePrefix": "10.0.0.0/24",
            "subnetName": "subnet1",
            "subnetPrefix": "10.0.0.0/24"
        },
        "vNet2": {
            "addressSpacePrefix": "192.168.0.0/24",
            "subnetName": "subnet1",
            "subnetPrefix": "192.168.0.0/24"
        },
        "vNet1tovNet2PeeringName": "[concat(parameters('vNet1Name'), '-', parameters('vNet2Name'))]",
        "vNet2tovNet1PeeringName": "[concat(parameters('vNet2Name'), '-', parameters('vNet1Name'))]",
        "VM1Storage": "[toLower('vm1sa56471')]",
        "VM1PIP": "PublicIPVM1",
        "VM1NIC": "windowsVM1-NetworkInterface"
    },
    "resources": [
        {
            "apiVersion": "2020-05-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vNet1Name')]",
            "location": "[parameters('location')]",
            "comments": "This is the first vNet",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet1').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet1').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vNet1').subnetPrefix]"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "apiVersion": "2020-05-01",
                    "type": "virtualNetworkPeerings",
                    "name": "[variables('vNet1tovNet2PeeringName')]",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vNet1Name'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vNet2Name'))]"
                    ],
                    "comments": "This is the peering from vNet 1 to vNet 2",
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vNet2Name'))]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2020-05-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vNet2Name')]",
            "location": "[parameters('location')]",
            "comments": "This is the second vNet",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet2').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet2').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vNet2').subnetPrefix]"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "apiVersion": "2020-05-01",
                    "type": "virtualNetworkPeerings",
                    "name": "[variables('vNet2tovNet1PeeringName')]",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vNet1Name'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vNet2Name'))]"
                    ],
                    "comments": "This is the peering from vNet 2 to vNet 1",
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vNet1Name'))]"
                        }
                    }
                }
            ]
        },
        {
            "name": "[variables('VM1Storage')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "windowsVM1 Storage Account"
            },
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "name": "[variables('VM1PIP')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-08-01",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[toLower('VM1dnslabel1256')]"
                }
            }
        },
        
        {
            "name": "[variables('VM1NIC')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('VM1PIP'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNet1Name'))]"
            ],
            "tags": {
                "displayName": "windowsVM1 Network Interface"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('VM1PIP'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNet1Name'), variables('vNet1').subnetName)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "windowsVM1",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('VM1Storage'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('VM1NIC'))]"
            ],
            "tags": {
                "displayName": "windowsVM1"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Basic_a0"
                },
                "osProfile": {
                    "computerName": "windowsVM1",
                    "adminUsername": "adminUsername",
                    "adminPassword": "adminPassword"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "windowsVM1OSDisk",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', 'windowsVM1-NetworkInterface')]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', toLower('windowsVM1storage'), '2015-06-15').primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [
                {
                    "name": "windowsVM1AzureDiagnostics",
                    "type": "extensions",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "displayName": "windowsVM1AzureDiagnostics"
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', 'windowsVM1')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Diagnostics",
                        "type": "IaaSDiagnostics",
                        "typeHandlerVersion": "1.5",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "xmlCfg": "[base64('<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http: //schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <Logs scheduledTransferPeriod=\"PT1M\" scheduledTransferLogLevelFilter=\"Error\" /> <Directories scheduledTransferPeriod=\"PT1M\"> <IISLogs containerName =\"wad-iis-logfiles\" /> <FailedRequestLogs containerName =\"wad-failedrequestlogs\" /> </Directories> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*\" /> </WindowsEventLog> <CrashDumps containerName=\"wad-crashdumps\" dumpType=\"Mini\"> <CrashDumpConfiguration processName=\"WaIISHost.exe\"/> <CrashDumpConfiguration processName=\"WaWorkerHost.exe\"/> <CrashDumpConfiguration processName=\"w3wp.exe\"/> </CrashDumps> <PerformanceCounters scheduledTransferPeriod=\"PT1M\"> <PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available MBytes\" sampleRate=\"PT3M\" /> <PerformanceCounterConfiguration counterSpecifier=\"\\Web Service(_Total)\\ISAPI Extension Requests/sec\" sampleRate=\"PT3M\" /> <PerformanceCounterConfiguration counterSpecifier=\"\\Web Service(_Total)\\Bytes Total/Sec\" sampleRate=\"PT3M\" /> <PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET Applications(__Total__)\\Requests/Sec\" sampleRate=\"PT3M\" /> <PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET Applications(__Total__)\\Errors Total/Sec\" sampleRate=\"PT3M\" /> <PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET\\Requests Queued\" sampleRate=\"PT3M\" /> <PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET\\Requests Rejected\" sampleRate=\"PT3M\" /> <PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT3M\" /> </PerformanceCounters> </DiagnosticMonitorConfiguration> </WadCfg>')]",
                            "storageAccount": "[toLower('windowsVM1storage')]"
                        },
                        "protectedSettings": {
                            "storageAccountName": "[toLower('windowsVM1storage')]",
                            "storageAccountKey": "[listkeys(resourceId('Microsoft.Storage/storageAccounts', toLower('windowsVM1storage')), '2015-06-15').key1]",
                            "storageAccountEndPoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', toLower('windowsVM1storage')), '2015-06-15').primaryEndpoints.blob]"
                        }
                    }
                }
            ]
        }
    ]
}